// Libraries
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// Define constants
#define BLYNK_TEMPLATE_ID "TMPL2ZQzs2zlz"
#define BLYNK_TEMPLATE_NAME "Gas Sensor"
#define BLYNK_AUTH_TOKEN "J02i05qlX-IuN1va3tZ9ZXPify2XhcEX"
#define BLYNK_PRINT Serial
#define BUZZER_PIN 14
#define SMOKE_PIN A0
#define SENSOR_THRESHOLD_LOW 400
#define SENSOR_THRESHOLD_HIGH 1000
#define RGB_RED_PIN 12 
#define RGB_GREEN_PIN 13
#define RGB_BLUE_PIN 15

/* LCD PIN
 SDA PIN 21
SCL PIN 22 */

// WiFi credentials
const char* ssid = "your wifi username";
const char* password = "your wifi password.";

// Gas sensor and LCD setup
LiquidCrystal_I2C lcd(0x27, 16, 2);

// Blynk setup
char auth[] = BLYNK_AUTH_TOKEN;
BlynkTimer timer;

// RGB LED colors
void setRGB(int red, int green, int blue) {
  analogWrite(RGB_RED_PIN, red);
  analogWrite(RGB_GREEN_PIN, green);
  analogWrite(RGB_BLUE_PIN, blue);
}

void sendSensor() {
  int data = analogRead(SMOKE_PIN);
  Blynk.virtualWrite(V0, data);
  Serial.print("Pin A0: ");
  Serial.println(data);

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Gas Sensor:");

  if (data < SENSOR_THRESHOLD_LOW) {
    // Low gas level - Green
    setRGB(0, 255, 0);
    lcd.setCursor(0, 1);
    lcd.print("Safe");
    digitalWrite(BUZZER_PIN, LOW);
  } else if (data >= SENSOR_THRESHOLD_LOW && data < SENSOR_THRESHOLD_HIGH) {
    // Medium gas level - Blue
    setRGB(0, 0, 255);
    lcd.setCursor(0, 1);
    lcd.print("Caution");
    digitalWrite(BUZZER_PIN, LOW);
  } else {
    // High gas level - Red
    setRGB(255, 0, 0);
    lcd.setCursor(0, 1);
    lcd.print("Gas Leak!");
    digitalWrite(BUZZER_PIN, HIGH);
    Blynk.logEvent("gas_alert", "Gas Leakage Detected");
  }
}

void setup() {
  pinMode(SMOKE_PIN, INPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(RGB_RED_PIN, OUTPUT);
  pinMode(RGB_GREEN_PIN, OUTPUT);
  pinMode(RGB_BLUE_PIN, OUTPUT);
  
  analogWriteRange(255); // Set PWM range 0-255
  
  Serial.begin(9600);
  lcd.init();
  lcd.backlight();
  Blynk.begin(auth, ssid, password);
  timer.setInterval(2500L, sendSensor);
}

void loop() {
  Blynk.run();
  timer.run();
}
